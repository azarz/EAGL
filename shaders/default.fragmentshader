#version 330 core

in vec2 TexCoords;
in vec3 Normal;
in vec3 FragPos;

out vec4 color;

uniform sampler2D maTexture;
uniform vec3 lightPos;
uniform vec3 lightColor;
uniform vec3 viewPos;

void main()
{    

    // Ambiant
    float ambientStrength = 0.05f; // On peut varier la puissance
    vec3 ambient = ambientStrength * lightColor;

    //Diffuse
    vec3 norm = normalize(Normal);
    vec3 lightDir = normalize(lightPos - FragPos);
    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff*lightColor;

    // Specular
    float specularStrength = 0.5f ;
    vec3 viewDir = normalize(viewPos - FragPos);
    vec3 reflectDir = reflect(-lightDir, norm );
    float spec = pow(max(dot(viewDir, reflectDir), 0.0) , 32);
    vec3 specular = specularStrength * spec * lightColor ;

    vec3 result = (ambient + diffuse + specular);

    color = texture(maTexture, TexCoords);
    color *= vec4(result, 1.0f);

    
}
